<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountID" xml:space="preserve">
    <value>Account ID</value>
  </data>
  <data name="AnErrorHasOccurred" xml:space="preserve">
    <value>An error has occurred</value>
  </data>
  <data name="ClickHereToGoBack" xml:space="preserve">
    <value>Click here to go back to the previous page</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="CouldNotSendPasswordResetEmailNotification" xml:space="preserve">
    <value>Could not send password reset email: the email server returned an error.</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="IhaveMFACode" xml:space="preserve">
    <value>I have an MFA Code</value>
  </data>
  <data name="MFACode" xml:space="preserve">
    <value>MFA Code</value>
  </data>
  <data name="NeedMFACode" xml:space="preserve">
    <value>Please type the MFA code.</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NotRedirectedAutomaticallyNotification" xml:space="preserve">
    <value>If you are not redirected automatically, follow this {0}</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordChangedSuccessfully" xml:space="preserve">
    <value>Password was changed successfully.</value>
  </data>
  <data name="PasswordChangedSuccessfullyACS" xml:space="preserve">
    <value>Your password has been successfully reset.</value>
  </data>
  <data name="PasswordChangedSuccessfullyAndWaitToBeRedirected" xml:space="preserve">
    <value>Password was changed successfully. Please wait to be redirected.</value>
  </data>
  <data name="PasswordExpiredNotification" xml:space="preserve">
    <value>Your password has expired. Please provide a new one.</value>
  </data>
  <data name="PasswordNotTheSame" xml:space="preserve">
    <value>Please type the same password.</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="ReturnToLogin" xml:space="preserve">
    <value>Return to sign-in page</value>
  </data>
  <data name="SendPasswordResetEmailSuccessfullyACS" xml:space="preserve">
    <value>An email has been sent to your account or your administrators. If you don't receive the email within 10 minutes, please try sending it again.</value>
  </data>
  <data name="SendRecoveryEmail" xml:space="preserve">
    <value>Send Recovery Email</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Server:</value>
  </data>
  <data name="SetPassword" xml:space="preserve">
    <value>Set Password</value>
  </data>
  <data name="SetPasswordForInitialAdminMessage" xml:space="preserve">
    <value>Set a password for the initial administrator on your new Laserfiche Cloud Account.</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>url</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="EmailOrUsername" xml:space="preserve">
    <value>Email or Username</value>
  </data>
  <data name="WelcomeToLaserficheCloud" xml:space="preserve">
    <value>Welcome to Laserfiche Cloud</value>
  </data>
  <data name="PasswordResetLinkExpired" xml:space="preserve">
    <value>This password reset link is expired.</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="RedirectingTitle" xml:space="preserve">
    <value>Redirecting</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="SetInitialPasswordForUserMessage" xml:space="preserve">
    <value>Set a password for your Laserfiche Cloud Account.</value>
  </data>
  <data name="AutoMappingMessage" xml:space="preserve">
    <value>After signing in, your Veo One ID will be mapped to this Laserfiche user account.  This mapping session will expire in 5 minutes.</value>
  </data>
  <data name="IAgreeToEULA" xml:space="preserve">
    <value>I agree to the </value>
  </data>
  <data name="SubscriptionAgreement" xml:space="preserve">
    <value>Subscription Agreement</value>
  </data>
  <data name="AcceptAgreement" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="LicenseAgreement" xml:space="preserve">
    <value>Subscription Agreement</value>
  </data>
  <data name="LicenseAgreementMessage" xml:space="preserve">
    <value>You must accept the Laserfiche Cloud Trial Subscription Agreement in order to use this service.</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="AccountIdCannotBeEmpty" xml:space="preserve">
    <value>Account ID cannot be empty.</value>
  </data>
  <data name="ChangeAccountID" xml:space="preserve">
    <value>Sign in with a different account ID</value>
  </data>
  <data name="EnterAccountID" xml:space="preserve">
    <value>Enter your account ID to sign in.</value>
  </data>
  <data name="RememberCustomerID" xml:space="preserve">
    <value>Remember</value>
  </data>
  <data name="SignInADFS" xml:space="preserve">
    <value>Sign in with ADFS</value>
  </data>
  <data name="Authenticate" xml:space="preserve">
    <value>Authenticate</value>
  </data>
  <data name="InvalidMfaCode" xml:space="preserve">
    <value>Invalid verification code</value>
  </data>
  <data name="MfaFieldPlaceholder" xml:space="preserve">
    <value>Verification Code</value>
  </data>
  <data name="MfaSignInDescription" xml:space="preserve">
    <value>Enter the verification code generated by your mobile application.</value>
  </data>
  <data name="AccountIdMustBeNumber" xml:space="preserve">
    <value>Account ID must be a number.</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="ChangeEmail" xml:space="preserve">
    <value>Sign in with a different email</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
</root>